{"version":3,"sources":["Services_Person.js","Notification.js","App.js","index.js"],"names":["baseUrl","Notification","status","tempName","className","Header","title","Filter","newFilter","handleNewFilter","value","onChange","Form","handleNewPersonSubmit","handleNewName","handleNewNumber","newName","newNumber","onSubmit","type","DeleteButton","person","deletePerson","style","marginLeft","onClick","id","name","List","persons","filter","toLocaleLowerCase","includes","map","data","index","number","paddingTop","paddingBottom","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","notification","setNotification","setTempName","useEffect","axios","get","then","res","initalPersons","event","target","newPerson","replace","newTemp","curr","some","window","confirm","put","response","post","concat","preventDefault","delete","personService","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1c553d5b.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseUrl = \"/api/persons\"\r\n\r\nconst getAll = () => {\r\n  const req = axios.get(baseUrl);\r\n  return req.then(res => res.data);\r\n};\r\n\r\nconst create = newPerson => {\r\n  const req = axios.post(baseUrl, newPerson);\r\n  return req.then(res => res.data);\r\n};\r\n\r\nconst update = (id, replace) => {\r\n  const req = axios.put(`${baseUrl}/${id}`, replace);\r\n  return req.then(res => res.data);\r\n};\r\n\r\nconst deletePerson = id => {\r\n  const req = axios.delete(`${baseUrl}/${id}`);\r\n  return req.then(res => res.data);\r\n};\r\n\r\nexport { getAll, create, update, deletePerson };","import React from 'react'\r\nimport './Notification.css';\r\n\r\nconst Notification = ({ status, tempName }) => {\r\n  if(status === \"\"){\r\n    return null\r\n  }\r\n  else if(status === 'added'){\r\n    return (<div className=\"added\" >Added { tempName }</div>)\r\n  }\r\n  else if(status === 'update'){\r\n    return (<div className=\"update\" >Information of { tempName } has already been updated to server</div>)\r\n  }\r\n  else if(status === 'delete'){\r\n    return (<div className=\"deleted\" >Information of { tempName } has already been removed from server</div>)\r\n  }\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport * as personService from \"./Services_Person\"\r\nimport Notification from \"./Notification\"\r\n\r\nconst Header = ({ title }) => {\r\n  return <h1>{title}</h1>\r\n}\r\n\r\nconst Filter = ({ newFilter, handleNewFilter }) => {\r\n  return (\r\n      <form>\r\n          <div>\r\n              filter shown with <input value={newFilter} onChange={handleNewFilter} />\r\n          </div>\r\n      </form>\r\n  )\r\n}\r\n\r\nconst Form = ({ handleNewPersonSubmit, handleNewName, handleNewNumber, newName, newNumber }) => {\r\n  return (\r\n      <form onSubmit={handleNewPersonSubmit}>\r\n          <div>\r\n              name: <input value={newName} onChange={handleNewName} />\r\n          </div>\r\n          <div>\r\n              number: <input value={newNumber} onChange={handleNewNumber} />\r\n          </div>\r\n          <div>\r\n              <button type=\"submit\">add</button>\r\n          </div>\r\n      </form>\r\n  )\r\n}\r\n\r\nconst DeleteButton = ({ person, deletePerson }) => {\r\n  return(\r\n    <button style={{\r\n      marginLeft: '5px'\r\n    }} onClick={() => deletePerson(person.id, person.name)}>Delete</button>\r\n  )\r\n}\r\n\r\nconst List = ({ persons, newFilter, deletePerson }) => {\r\n  if (newFilter !== '') {\r\n      let arrFilter = persons.filter(person => person.name.toLocaleLowerCase().includes(newFilter.toLocaleLowerCase()))\r\n      return arrFilter.map((data, index) => <p key={index}>{data.name} {data.number}</p>)\r\n  }\r\n  else {\r\n      return (\r\n          persons.map((data, index) => (\r\n            <div key={ index } style={{\r\n              paddingTop: '10px',\r\n              paddingBottom: '10px'\r\n              }}>\r\n              {data.name} {data.number}\r\n              <DeleteButton person={ data } deletePerson={ deletePerson }></DeleteButton>\r\n            </div>\r\n          )\r\n      )\r\n    )\r\n  }\r\n}\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([])\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ newFilter, setNewFilter ] = useState('')\r\n  const [ notification, setNotification ] = useState('')\r\n  const [ tempName, setTempName ] = useState('')\r\n\r\n  useEffect(() => {\r\n    personService.getAll().then(initalPersons => {\r\n      setPersons(initalPersons);\r\n    });\r\n  }, []);\r\n\r\n  const deletePerson = (id, name) => {\r\n    if(window.confirm(`Delete ${name}?`)){\r\n      personService.deletePerson(id).then(response => {\r\n        setPersons(persons.filter(person => person.id !== id))\r\n      })\r\n    }\r\n    setTempName(name)\r\n    setNotification('delete')\r\n  }\r\n\r\n  const handleNewName = event => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNewNumber = event => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleNewFilter = event => {\r\n    setNewFilter(event.target.value)\r\n  }\r\n\r\n  const handleNewPersonSubmit = event => {\r\n    let newTemp = {name: newName, number: newNumber}\r\n    // const pushData = () => {\r\n    //   personService.create(newTemp).then(response => {\r\n    //     setPersons([...persons, response])\r\n    //   })\r\n    //   setTempName(newName)\r\n    //   setNotification('added')\r\n    // }\r\n\r\n    // let pushFlag = 1\r\n    const curr = persons.filter(person => person.name === newName)\r\n    if(persons.some(person => person.name === newName)){\r\n      if(window.confirm(`${newName} is already added to phonebook`)){\r\n        personService.update(curr[0].id, newTemp).then(response => {\r\n          setPersons(persons.map(person => person.id !== curr[0].id ? person : response))\r\n        })\r\n      }\r\n    }\r\n    else{\r\n      personService.create(newTemp).then(response => {\r\n        setPersons(persons.concat(response))\r\n      })\r\n    }\r\n    // for(let i=0; i<persons.length; i++){\r\n    //   let compareName = (persons[i].name.toLowerCase())\r\n    //                 .localeCompare(newName.toLocaleLowerCase())\r\n    //   let compareNumber = (persons[i].number).localeCompare(newNumber)\r\n    //   if(compareName === 0 && compareNumber === 0){\r\n    //     alert(`${persons[i].name} is already added to phonebook`)\r\n    //     pushFlag = 0\r\n    //     break\r\n    //   }\r\n    //   else if(compareName === 0 && compareNumber !== 0){\r\n    //     let id = persons[i].id\r\n    //     personService.update(id, newTemp).then(response => {\r\n    //       setPersons([...persons.filter(person => person.id !== id), response])\r\n    //       console.log(response)\r\n    //     })\r\n    //     setTempName(persons[i].name)\r\n    //     setNotification('update')\r\n    //     pushFlag = 0\r\n    //   }\r\n    // }\r\n    // if(pushFlag === 1){\r\n    //   pushData();\r\n    // }\r\n\r\n    event.preventDefault()\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header title=\"Phonebook\"></Header>\r\n      <Notification status={ notification} tempName={ tempName }></Notification>\r\n      <Filter newFilter={ newFilter } handleNewFilter={ handleNewFilter }></Filter>\r\n      <Header title=\"add a new\"></Header>\r\n      <Form\r\n        handleNewName={ handleNewName }\r\n        handleNewNumber={ handleNewNumber }\r\n        handleNewPersonSubmit={ handleNewPersonSubmit }\r\n        newName={ newName }\r\n        newNumber={ newNumber }\r\n      ></Form>\r\n      <Header title=\"Numbers\"></Header>\r\n      <List persons={ persons } newFilter={ newFilter } deletePerson={ deletePerson } ></List>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}